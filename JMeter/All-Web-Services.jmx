<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.4" jmeter="2.9 r1437961">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="3esi Web Services Thread" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <longProp name="ThreadGroup.start_time">1355325771000</longProp>
        <longProp name="ThreadGroup.end_time">1355325771000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
          <collectionProp name="AuthManager.auth_list">
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">http://127.0.0.1:8080/</stringProp>
              <stringProp name="Authorization.username">3ESI\aissa</stringProp>
              <stringProp name="Authorization.password"></stringProp>
              <stringProp name="Authorization.domain">3ESI</stringProp>
              <stringProp name="Authorization.realm">3ESI</stringProp>
            </elementProp>
          </collectionProp>
        </AuthManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/xml</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Projects WS Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Project_Export" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="job" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">WebService_Project_Export_Do_not_Delete</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">job</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">127.0.0.1</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/esi.manage/integration/job/export</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <SizeAssertion guiclass="SizeAssertionGui" testclass="SizeAssertion" testname="Verify That The Return Size Is Less Than 1MB" enabled="true">
              <stringProp name="Assertion.test_field">SizeAssertion.response_network_size</stringProp>
              <stringProp name="SizeAssertion.size">1000000</stringProp>
              <intProp name="SizeAssertion.operator">4</intProp>
            </SizeAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Verify That The Return Takes Less Than 10 Seconds" enabled="true">
              <stringProp name="DurationAssertion.duration">10000</stringProp>
            </DurationAssertion>
            <hashTree/>
            <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="Verify XML is correctly formatted." enabled="true">
              <stringProp name="TestPlan.comments">XML Verification</stringProp>
            </XMLAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Code" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Message" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2524">OK</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Correct Project Sets Are Retrieved" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1487852525">&lt;k:name&gt;Canada Projects&lt;/k:name&gt;</stringProp>
                <stringProp name="371940206">&lt;k:name&gt;Saskatchewan Bakken&lt;/k:name&gt;</stringProp>
                <stringProp name="-176283153">&lt;k:name&gt;Bakken - Maintenance 2010-13&lt;/k:name&gt;</stringProp>
                <stringProp name="960227101">&lt;k:name&gt;Sask Bakken - Exploration 2011&lt;/k:name&gt;</stringProp>
                <stringProp name="-207022674">&lt;k:name&gt;Sask Bakken - Dev 2012&lt;/k:name&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Import_Projects" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot;?&gt;&#xd;
&lt;import xmlns=&quot;http://www.3esi.com/xmlns/2013.3/esi.manage/project-import/&quot; xmlns:t=&quot;http://www.3esi.com/xmlns/2013.1/esi.manage/types/&quot;&#xd;
  xmlns:k=&quot;http://www.3esi.com/xmlns/2014/esi.manage/keyTypes/&quot; xmlns:prj=&quot;http://www.3esi.com/xmlns/2013/esi.manage/project/&quot;&#xd;
  xmlns:atb=&quot;http://www.3esi.com/xmlns/2013/esi.manage/attribute/&quot; xmlns:a=&quot;http://www.3esi.com/xmlns/2013.2/esi.manage/asset/&quot;&#xd;
  xmlns:c=&quot;http://www.3esi.com/xmlns/2013.1/esi.manage/capitalExpenditure/&quot; xmlns:p=&quot;http://www.3esi.com/xmlns/2014/esi.manage/production/&quot;&#xd;
  xmlns:o=&quot;http://www.3esi.com/xmlns/2014/esi.manage/operatingExpenditure/&quot;&gt;&#xd;
  &lt;project&gt;&#xd;
    &lt;k:budget&gt;&#xd;
      &lt;k:name&gt;Training Forecast&lt;/k:name&gt;&#xd;
    &lt;/k:budget&gt;&#xd;
    &lt;k:name&gt;Project Via Web Service&lt;/k:name&gt;&#xd;
    &lt;prj:manager&gt;&#xd;
      &lt;t:name&gt;Arnold Thames&lt;/t:name&gt;&#xd;
    &lt;/prj:manager&gt;&#xd;
    &lt;asset&gt;&#xd;
      &lt;k:name&gt;Asset #1&lt;/k:name&gt;&#xd;
    &lt;/asset&gt;&#xd;
    &lt;production&gt;&#xd;
      &lt;k:asset&gt;&#xd;
        &lt;k:name&gt;Asset #1&lt;/k:name&gt;&#xd;
      &lt;/k:asset&gt;&#xd;
      &lt;p:product&gt;&#xd;
        &lt;t:name&gt;Oil&lt;/t:name&gt;&#xd;
      &lt;/p:product&gt;&#xd;
      &lt;p:volumeRate&gt;bbl/d&lt;/p:volumeRate&gt;&#xd;
      &lt;p:declineType&gt;&#xd;
        &lt;p:abbreviation&gt;Com&lt;/p:abbreviation&gt;&#xd;
      &lt;/p:declineType&gt;&#xd;
      &lt;p:probabilityOfSuccess&gt;0.5&lt;/p:probabilityOfSuccess&gt;&#xd;
      &lt;p:onStreamDate&gt;2011-01-01&lt;/p:onStreamDate&gt;&#xd;
      &lt;p:comment&gt;Comment&lt;/p:comment&gt;&#xd;
      &lt;p:revenueCurrency&gt;USD&lt;/p:revenueCurrency&gt;&#xd;
      &lt;p:curve&gt;&#xd;
        &lt;p:reserveClassification&gt;&#xd;
          &lt;p:name&gt;1P&lt;/p:name&gt;&#xd;
          &lt;p:category&gt;1-Proven&lt;/p:category&gt;&#xd;
        &lt;/p:reserveClassification&gt;&#xd;
        &lt;p:type&gt;linear&lt;/p:type&gt;&#xd;
        &lt;p:degreeOfFreedom&gt;&#xd;
          &lt;p:name&gt;qi&lt;/p:name&gt;&#xd;
          &lt;p:value&gt;1000.0&lt;/p:value&gt;&#xd;
        &lt;/p:degreeOfFreedom&gt;&#xd;
        &lt;p:degreeOfFreedom&gt;&#xd;
          &lt;p:name&gt;di&lt;/p:name&gt;&#xd;
          &lt;p:value&gt;24.0&lt;/p:value&gt;&#xd;
        &lt;/p:degreeOfFreedom&gt;&#xd;
        &lt;p:degreeOfFreedom&gt;&#xd;
          &lt;p:name&gt;qf&lt;/p:name&gt;&#xd;
          &lt;p:value&gt;5&lt;/p:value&gt;&#xd;
        &lt;/p:degreeOfFreedom&gt;&#xd;
      &lt;/p:curve&gt;&#xd;
    &lt;/production&gt;&#xd;
  &lt;/project&gt;&#xd;
&lt;/import&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">127.0.0.1</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/esi.manage/integration/import/forecast/project</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <SizeAssertion guiclass="SizeAssertionGui" testclass="SizeAssertion" testname="Verify That The Return Size Is Less Than 1KB" enabled="true">
              <stringProp name="Assertion.test_field">SizeAssertion.response_network_size</stringProp>
              <stringProp name="SizeAssertion.size">1000</stringProp>
              <intProp name="SizeAssertion.operator">4</intProp>
            </SizeAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Verify That The Return Is Less Than 2 Seconds" enabled="true">
              <stringProp name="TestPlan.comments">Verify that it lasts 2 seconds</stringProp>
              <stringProp name="DurationAssertion.duration">2000</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Code" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Message" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2524">OK</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Import_Attributes" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot;?&gt;&#xd;
&lt;import xmlns=&quot;http://www.3esi.com/xmlns/2013.1/esi.manage/projectAttribute-import/&quot; xmlns:p=&quot;http://www.3esi.com/xmlns/2013/esi.manage/project/&quot;&#xd;
  xmlns:a=&quot;http://www.3esi.com/xmlns/2013.2/esi.manage/asset/&quot; xmlns:atb=&quot;http://www.3esi.com/xmlns/2013/esi.manage/attribute/&quot;&#xd;
  xmlns:k=&quot;http://www.3esi.com/xmlns/2014/esi.manage/keyTypes/&quot; xmlns:t=&quot;http://www.3esi.com/xmlns/2013.1/esi.manage/types/&quot;&gt;&#xd;
  &lt;project&gt;&#xd;
    &lt;k:budget&gt;&#xd;
      &lt;k:name&gt;Training Forecast&lt;/k:name&gt;&#xd;
    &lt;/k:budget&gt;&#xd;
    &lt;k:name&gt;Project Via Web Service&lt;/k:name&gt;&#xd;
     &lt;attribute&gt;&#xd;
       &lt;k:abbreviation&gt;US&lt;/k:abbreviation&gt;&#xd;
    &lt;/attribute&gt; &#xd;
    &lt;attribute&gt;&#xd;
       &lt;k:abbreviation&gt;GOM&lt;/k:abbreviation&gt;&#xd;
     &lt;/attribute&gt;&#xd;
     &lt;attribute&gt;&#xd;
      &lt;k:abbreviation&gt;Deep&lt;/k:abbreviation&gt;&#xd;
    &lt;/attribute&gt; &#xd;
    &lt;customValue&gt;&#xd;
      &lt;k:name&gt;Status&lt;/k:name&gt;&#xd;
      &lt;p:value&gt;Drilling&lt;/p:value&gt;&#xd;
    &lt;/customValue&gt;&#xd;
    &lt;assetCustomValue&gt;&#xd;
      &lt;k:asset&gt;&#xd;
        &lt;k:name&gt;Asset #1&lt;/k:name&gt;&#xd;
      &lt;/k:asset&gt;&#xd;
      &lt;k:name&gt;Asset_Count&lt;/k:name&gt;&#xd;
      &lt;a:value&gt;1&lt;/a:value&gt;&#xd;
    &lt;/assetCustomValue&gt;&#xd;
  &lt;/project&gt;&#xd;
&lt;/import&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">127.0.0.1</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/esi.manage/integration/import/projectAttribute</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <SizeAssertion guiclass="SizeAssertionGui" testclass="SizeAssertion" testname="Verify That The Return Size Is Less Than 1KB" enabled="true">
              <stringProp name="Assertion.test_field">SizeAssertion.response_network_size</stringProp>
              <stringProp name="SizeAssertion.size">1000</stringProp>
              <intProp name="SizeAssertion.operator">4</intProp>
            </SizeAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Verify That The Return Is Less Than 2 Seconds" enabled="true">
              <stringProp name="TestPlan.comments">Verify that it lasts 2 seconds</stringProp>
              <stringProp name="DurationAssertion.duration">2000</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Code" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Message" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2524">OK</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Shift_Dates" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;ProjectShift xmlns=&quot;http://www.3esi.com/xmlns/2013/esi.manage/project-shift/&quot;&#xd;
              xmlns:esi=&quot;http://www.3esi.com/xmlns/2013/esi.manage/project-shift/&quot;&#xd;
              xmlns:k=&quot;http://www.3esi.com/xmlns/2014/esi.manage/keyTypes/&quot;&#xd;
              xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
  &lt;Shift&gt;&#xd;
    &lt;Project&gt;&#xd;
      &lt;k:budget&gt;&#xd;
        &lt;k:name&gt;Training Forecast&lt;/k:name&gt;&#xd;
      &lt;/k:budget&gt;&#xd;
      &lt;k:name&gt;Project Via Web Service&lt;/k:name&gt;&#xd;
    &lt;/Project&gt;&#xd;
    &lt;!-- new project start date --&gt;&#xd;
    &lt;startDate&gt;2014-06-01&lt;/startDate&gt;&#xd;
  &lt;/Shift&gt;&#xd;
  &lt;Shift&gt;&#xd;
    &lt;Project&gt;&#xd;
      &lt;k:budget&gt;&#xd;
        &lt;k:name&gt;Training Forecast&lt;/k:name&gt;&#xd;
      &lt;/k:budget&gt;&#xd;
      &lt;k:name&gt;Project Via Web Service&lt;/k:name&gt;&#xd;
    &lt;/Project&gt;&#xd;
    &lt;startYear&gt;2013&lt;/startYear&gt;&#xd;
  &lt;/Shift&gt;&#xd;
  &lt;Shift&gt;&#xd;
    &lt;Project&gt;&#xd;
      &lt;k:budget&gt;&#xd;
        &lt;k:name&gt;Training Forecast&lt;/k:name&gt;&#xd;
      &lt;/k:budget&gt;&#xd;
      &lt;k:name&gt;Project Via Web Service&lt;/k:name&gt;&#xd;
    &lt;/Project&gt;&#xd;
    &lt;startYearMonth&gt;2012-06&lt;/startYearMonth&gt;&#xd;
  &lt;/Shift&gt;&#xd;
  &lt;Shift&gt;&#xd;
    &lt;Project&gt;&#xd;
      &lt;k:budget&gt;&#xd;
        &lt;k:name&gt;Training Forecast&lt;/k:name&gt;&#xd;
      &lt;/k:budget&gt;&#xd;
      &lt;k:name&gt;Project Via Web Service&lt;/k:name&gt;&#xd;
    &lt;/Project&gt;&#xd;
    &lt;ShiftBy&gt;&#xd;
      &lt;years&gt;1&lt;/years&gt;&#xd;
    &lt;/ShiftBy&gt;&#xd;
  &lt;/Shift&gt;&#xd;
  &lt;Shift&gt;&#xd;
    &lt;Project&gt;&#xd;
      &lt;k:budget&gt;&#xd;
        &lt;k:name&gt;Training Forecast&lt;/k:name&gt;&#xd;
      &lt;/k:budget&gt;&#xd;
      &lt;k:name&gt;Project Via Web Service&lt;/k:name&gt;&#xd;
    &lt;/Project&gt;&#xd;
    &lt;ShiftBy&gt;&#xd;
      &lt;months&gt;-3&lt;/months&gt;&#xd;
    &lt;/ShiftBy&gt;&#xd;
  &lt;/Shift&gt;&#xd;
  &lt;Shift&gt;&#xd;
    &lt;Project&gt;&#xd;
      &lt;k:budget&gt;&#xd;
        &lt;k:name&gt;Training Forecast&lt;/k:name&gt;&#xd;
      &lt;/k:budget&gt;&#xd;
      &lt;k:name&gt;Project Via Web Service&lt;/k:name&gt;&#xd;
    &lt;/Project&gt;&#xd;
    &lt;ShiftBy&gt;&#xd;
      &lt;years&gt;-2&lt;/years&gt;&#xd;
      &lt;months&gt;-6&lt;/months&gt;&#xd;
    &lt;/ShiftBy&gt;&#xd;
  &lt;/Shift&gt;&#xd;
  &lt;Shift&gt;&#xd;
    &lt;Project&gt;&#xd;
      &lt;k:budget&gt;&#xd;
        &lt;k:name&gt;Training Forecast&lt;/k:name&gt;&#xd;
      &lt;/k:budget&gt;&#xd;
      &lt;k:name&gt;Project Via Web Service&lt;/k:name&gt;&#xd;
    &lt;/Project&gt;&#xd;
    &lt;ShiftBy&gt;&#xd;
      &lt;days&gt;365&lt;/days&gt;&#xd;
    &lt;/ShiftBy&gt;&#xd;
  &lt;/Shift&gt;&#xd;
  &lt;Shift&gt;&#xd;
    &lt;Project&gt;&#xd;
      &lt;k:budget&gt;&#xd;
        &lt;k:name&gt;Training Forecast&lt;/k:name&gt;&#xd;
      &lt;/k:budget&gt;&#xd;
      &lt;k:name&gt;Project Via Web Service&lt;/k:name&gt;&#xd;
    &lt;/Project&gt;&#xd;
    &lt;ShiftBy&gt;&#xd;
      &lt;!-- These two values effectively --&gt;&#xd;
      &lt;!-- cancel each other --&gt;&#xd;
      &lt;years&gt;1&lt;/years&gt;     &#xd;
      &lt;months&gt;-12&lt;/months&gt;&#xd;
    &lt;/ShiftBy&gt;&#xd;
  &lt;/Shift&gt;&#xd;
&lt;/ProjectShift&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">127.0.0.1</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/esi.manage/integration/import/projectshift</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Verify That The Return Is Less Than 2 Seconds" enabled="true">
              <stringProp name="TestPlan.comments">Verify that it lasts 2 seconds</stringProp>
              <stringProp name="DurationAssertion.duration">2000</stringProp>
            </DurationAssertion>
            <hashTree/>
            <SizeAssertion guiclass="SizeAssertionGui" testclass="SizeAssertion" testname="Verify That The Return Size Is Less Than 1KB" enabled="true">
              <stringProp name="Assertion.test_field">SizeAssertion.response_network_size</stringProp>
              <stringProp name="SizeAssertion.size">1000</stringProp>
              <intProp name="SizeAssertion.operator">4</intProp>
            </SizeAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Message" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2524">OK</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Code" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Element Count Business Error Count Fatal Error Count " enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2131337695">&lt;Summary&gt;
    &lt;Success&gt;true&lt;/Success&gt;
    &lt;ElementCount&gt;8&lt;/ElementCount&gt;
    &lt;BusinessErrorCount&gt;0&lt;/BusinessErrorCount&gt;
    &lt;FatalErrorCount&gt;0&lt;/FatalErrorCount&gt;
  &lt;/Summary&gt;</stringProp>
                <stringProp name="0"></stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Attachments_Export" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">127.0.0.1</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/esi.manage/integration/attachments?budget=Training%20Forecast&amp;since=60m</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Verify That The Return Is Less Than 2 Seconds" enabled="true">
              <stringProp name="TestPlan.comments">Verify that it lasts 2 seconds</stringProp>
              <stringProp name="DurationAssertion.duration">2000</stringProp>
            </DurationAssertion>
            <hashTree/>
            <SizeAssertion guiclass="SizeAssertionGui" testclass="SizeAssertion" testname="Verify That The Return Size Is Less Than 10KB" enabled="true">
              <stringProp name="Assertion.test_field">SizeAssertion.response_network_size</stringProp>
              <stringProp name="SizeAssertion.size">10000</stringProp>
              <intProp name="SizeAssertion.operator">4</intProp>
            </SizeAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Message" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2524">OK</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Code" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="Verify XML Is Correctly Formatted" enabled="true"/>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Correct Attachment Is Retrieved" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-470972603">Attachment.txt</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Measures Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Measure Export Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/csv</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Measure_Export" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"># lines with # are treated as comments&#xd;
# -h says that headers should be written in the first column&#xd;
-h&#xd;
-z&#xd;
&#xd;
# there are pre-defined groupings (-g) which are always in two parts i.e., Project.Name&#xd;
# for a grouping from the Hierarchy, its the &quot;Custom=Prd Region&quot;&#xd;
-g BUDGET.NAME&#xd;
-g PROJECT.NAME&#xd;
-g ASSET.NAME&#xd;
-g PRODUCT.NAME&#xd;
-g PRODUCT.CATEGORY&#xd;
-g PRODUCTION.ONSTREAM&#xd;
&#xd;
# -------------------   Gross -------------------------------------&#xd;
-c &quot;Forecast Gross Risked Row&quot; -m PRODUCTION -e &quot;Gross Risked Raw&quot; -t Forecast -U Oil:boe -X Default --consolidation Proven:1P --pricescenario &quot;Royalty - Low&quot;&#xd;
-c &quot;Actuals Gross Risked Row&quot; -m PRODUCTION -e &quot;Gross Risked Raw&quot; -t Actuals -U Oil:boe -X Default --consolidation Proven:1P --pricescenario &quot;Royalty - Low&quot;&#xd;
-c &quot;Blended Gross Risked Row&quot; -m PRODUCTION -e &quot;Gross Risked Raw&quot; -t Blended -U Oil:boe -X Default -a 2011-01-01 --consolidation Proven:1P --pricescenario &quot;Royalty - Low&quot;&#xd;
-c &quot;FieldEst Gross Risked Row&quot; -m PRODUCTION -e &quot;Gross Risked Raw&quot; -t &quot;Field Est&quot; -U Oil:boe -X Default --consolidation Proven:1P --pricescenario &quot;Royalty - Low&quot;&#xd;
-c &quot;FinActuals Gross Risked Row&quot; -m PRODUCTION -e &quot;Gross Risked Raw&quot; -t &quot;Fin Actls&quot; -U Oil:boe -X Default --consolidation Proven:1P --pricescenario &quot;Royalty - Low&quot;&#xd;
-c &quot;FinBlend Gross Risked Row&quot; -m PRODUCTION -e &quot;Gross Risked Raw&quot; -t &quot;Fin Blend&quot; -U Oil:boe -X Default -F -a 2011-01-01 --consolidation Proven:1P --pricescenario &quot;Royalty - Low&quot;&#xd;
&#xd;
-c &quot;Forecast Gross Unrisked Raw&quot; -m PRODUCTION -e &quot;Gross Unrisked Raw&quot; -t Forecast -U Oil:boe -X Default --consolidation Proven:1P --pricescenario &quot;Royalty - Low&quot;&#xd;
-c &quot;Actuals Gross Unrisked Raw&quot; -m PRODUCTION -e &quot;Gross Unrisked Raw&quot; -t Actuals -U Oil:boe -X Default --consolidation Proven:1P --pricescenario &quot;Royalty - Low&quot;&#xd;
-c &quot;Blended Gross Unrisked Raw&quot; -m PRODUCTION -e &quot;Gross Unrisked Raw&quot; -t Blended -U Oil:boe -X Default -a 2011-01-01 --consolidation Proven:1P --pricescenario &quot;Royalty - Low&quot;&#xd;
-c &quot;FieldEst Gross Unrisked Raw&quot; -m PRODUCTION -e &quot;Gross Unrisked Raw&quot; -t &quot;Field Est&quot; -U Oil:boe -X Default --consolidation Proven:1P --pricescenario &quot;Royalty - Low&quot;&#xd;
-c &quot;FinActuals Gross Unrisked Raw&quot; -m PRODUCTION -e &quot;Gross Unrisked Raw&quot; -t &quot;Fin Actls&quot; -U Oil:boe -X Default --consolidation Proven:1P --pricescenario &quot;Royalty - Low&quot;&#xd;
-c &quot;FinBlend Gross Unrisked Raw&quot; -m PRODUCTION -e &quot;Gross Unrisked Raw&quot; -t &quot;Fin Blend&quot; -U Oil:boe -X Default -F -a 2011-01-01 --consolidation Proven:1P --pricescenario &quot;Royalty - Low&quot;&#xd;
&#xd;
-c &quot;Forecast Gross Risked Shrunk&quot; -m PRODUCTION -e &quot;Gross Risked Shrunk&quot; -t Forecast -U Oil:boe -X Default --consolidation Proven:1P --pricescenario &quot;Royalty - Low&quot;&#xd;
-c &quot;Actuals Gross Risked Shrunk&quot; -m PRODUCTION -e &quot;Gross Risked Shrunk&quot; -t Actuals -U Oil:boe -X Default --consolidation Proven:1P --pricescenario &quot;Royalty - Low&quot;&#xd;
-c &quot;Blended Gross Risked Shrunk&quot; -m PRODUCTION -e &quot;Gross Risked Shrunk&quot; -t Blended -U Oil:boe -X Default -a 2011-01-01 --consolidation Proven:1P --pricescenario &quot;Royalty - Low&quot;&#xd;
-c &quot;FieldEst Gross Risked Shrunk&quot; -m PRODUCTION -e &quot;Gross Risked Shrunk&quot; -t &quot;Field Est&quot; -U Oil:boe -X Default --consolidation Proven:1P --pricescenario &quot;Royalty - Low&quot;&#xd;
-c &quot;FinActuals Gross Risked Shrunk&quot; -m PRODUCTION -e &quot;Gross Risked Shrunk&quot; -t &quot;Fin Actls&quot; -U Oil:boe -X Default --consolidation Proven:1P --pricescenario &quot;Royalty - Low&quot;&#xd;
-c &quot;FinBlend Gross Risked Shrunk&quot; -m PRODUCTION -e &quot;Gross Risked Shrunk&quot; -t &quot;Fin Blend&quot; -U Oil:boe -X Default -F -a 2011-01-01 --consolidation Proven:1P --pricescenario &quot;Royalty - Low&quot;&#xd;
&#xd;
-c &quot;Forecast Gross Unrisked Shrunk&quot; -m PRODUCTION -e &quot;Gross Unrisked Shrunk&quot; -t Forecast -U Oil:boe -X Default --consolidation Proven:1P --pricescenario &quot;Royalty - Low&quot;&#xd;
-c &quot;Actuals Gross Unrisked Shrunk&quot; -m PRODUCTION -e &quot;Gross Unrisked Shrunk&quot; -t Actuals -U Oil:boe -X Default --consolidation Proven:1P --pricescenario &quot;Royalty - Low&quot;&#xd;
-c &quot;Blended Gross Unrisked Shrunk&quot; -m PRODUCTION -e &quot;Gross Unrisked Shrunk&quot; -t Blended -U Oil:boe -X Default -a 2011-01-01 --consolidation Proven:1P --pricescenario &quot;Royalty - Low&quot;&#xd;
-c &quot;FieldEst Gross Unrisked Shrunk&quot; -m PRODUCTION -e &quot;Gross Unrisked Shrunk&quot; -t &quot;Field Est&quot; -U Oil:boe -X Default --consolidation Proven:1P --pricescenario &quot;Royalty - Low&quot;&#xd;
-c &quot;FinActuals Gross Unrisked Shrunk&quot; -m PRODUCTION -e &quot;Gross Unrisked Shrunk&quot; -t &quot;Fin Actls&quot; -U Oil:boe -X Default --consolidation Proven:1P --pricescenario &quot;Royalty - Low&quot;&#xd;
-c &quot;FinBlend Gross Unrisked Shrunk&quot; -m PRODUCTION -e &quot;Gross Unrisked Shrunk&quot; -t &quot;Fin Blend&quot; -U Oil:boe -X Default -F -a 2011-01-01 --consolidation Proven:1P --pricescenario &quot;Royalty - Low&quot;&#xd;
&#xd;
#start of data, number of period, periodicity (M=Monthly), and Project Set Name &#xd;
2011-01-01 36 M &quot;Evergreen Forecast&quot;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">127.0.0.1</stringProp>
              <stringProp name="HTTPSampler.port">8080</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/esi.manage/integration/export?</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Verify That The Return Is Less Than 4 Seconds" enabled="true">
                <stringProp name="TestPlan.comments">Verify that it lasts 2 seconds</stringProp>
                <stringProp name="DurationAssertion.duration">4000</stringProp>
              </DurationAssertion>
              <hashTree/>
              <SizeAssertion guiclass="SizeAssertionGui" testclass="SizeAssertion" testname="Verify That The Return Size Is Less Than 40KB" enabled="true">
                <stringProp name="Assertion.test_field">SizeAssertion.response_network_size</stringProp>
                <stringProp name="SizeAssertion.size">40000</stringProp>
                <intProp name="SizeAssertion.operator">4</intProp>
              </SizeAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Message" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2524">OK</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Code" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify That The Correct Measure Export Is Retrieved." enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1429223058">Training Forecast&quot;,&quot;NS Claire 2&quot;,&quot;NSC 2&quot;,&quot;Gas&quot;,&quot;Gas&quot;</stringProp>
                  <stringProp name="928460755">Training Forecast&quot;,&quot;NS Claire 2&quot;,&quot;NSC 2&quot;,&quot;Raw Bitumen&quot;,&quot;Liquids&quot;</stringProp>
                  <stringProp name="-600626790">&quot;Training Forecast&quot;,&quot;NS Claire 2 - Workover&quot;,&quot;NSC 2&quot;,&quot;Gas&quot;,&quot;Gas</stringProp>
                  <stringProp name="-815154899">&quot;Training Forecast&quot;,&quot;NS Claire 2 - Workover&quot;,&quot;NSC 2&quot;,&quot;Raw Bitumen&quot;,&quot;Liquids&quot;</stringProp>
                  <stringProp name="-721493810">&quot;Training Forecast&quot;,&quot;NS Claire 3&quot;,&quot;NSC 3&quot;,&quot;Gas&quot;,&quot;Gas&quot;</stringProp>
                  <stringProp name="-910280909">&quot;Training Forecast&quot;,&quot;NS Claire 3&quot;,&quot;NSC 3&quot;,&quot;Raw Bitumen&quot;,&quot;Liquids&quot;</stringProp>
                  <stringProp name="1029858572">&quot;Training Forecast&quot;,&quot;NS Claire 4&quot;,&quot;NSC 4&quot;,&quot;Gas&quot;,&quot;Gas&quot;</stringProp>
                  <stringProp name="146230897">&quot;Training Forecast&quot;,&quot;NS Claire 4&quot;,&quot;NSC 4&quot;,&quot;Raw Bitumen&quot;,&quot;Liquids&quot;</stringProp>
                  <stringProp name="1115562474">&quot;Training Forecast&quot;,&quot;North Dakota Willston Basin&quot;,&quot;Williston Basin Field&quot;,&quot;Raw Bitumen&quot;,&quot;Liquids&quot;</stringProp>
                  <stringProp name="473453796">&quot;Training Forecast&quot;,&quot;Saskatchewan Bakken&quot;,&quot;Bakken Base Well 1&quot;,&quot;Gas&quot;,&quot;Gas&quot;</stringProp>
                  <stringProp name="-508806583">&quot;Training Forecast&quot;,&quot;Saskatchewan Bakken&quot;,&quot;Bakken Base Well 1&quot;,&quot;Raw Bitumen&quot;,&quot;Liquids&quot;</stringProp>
                  <stringProp name="-32104829">&quot;Training Forecast&quot;,&quot;Saskatchewan Bakken&quot;,&quot;Bakken Base Well 2&quot;,&quot;Gas&quot;,&quot;Gas&quot;</stringProp>
                  <stringProp name="-477786776">&quot;Training Forecast&quot;,&quot;Saskatchewan Bakken&quot;,&quot;Bakken Base Well 2&quot;,&quot;Raw Bitumen&quot;,&quot;Liquids&quot;</stringProp>
                  <stringProp name="-537663454">&quot;Training Forecast&quot;,&quot;Saskatchewan Bakken&quot;,&quot;Bakken Base Well 3&quot;,&quot;Gas&quot;,&quot;Gas&quot;</stringProp>
                  <stringProp name="-446766969">&quot;Training Forecast&quot;,&quot;Saskatchewan Bakken&quot;,&quot;Bakken Base Well 3&quot;,&quot;Raw Bitumen&quot;,&quot;Liquids&quot;</stringProp>
                  <stringProp name="-1043222079">&quot;Training Forecast&quot;,&quot;Saskatchewan Bakken&quot;,&quot;Bakken Base Well 4&quot;,&quot;Gas&quot;,&quot;Gas&quot;</stringProp>
                  <stringProp name="-151958532">&quot;Training Forecast&quot;,&quot;Saskatchewan Bakken&quot;,&quot;Bakken Base Well 4&quot;,&quot;Raw Bitumen&quot;,&quot;Liquids</stringProp>
                  <stringProp name="155487164">&quot;Training Forecast&quot;,&quot;Wiliston Basin Development Program &quot;&quot;A&quot;&quot;&quot;,&quot;Wiliston Dev Well 1&quot;,&quot;Gas&quot;,&quot;Gas&quot;</stringProp>
                  <stringProp name="2124737825">&quot;Training Forecast&quot;,&quot;Wiliston Basin Development Program &quot;&quot;A&quot;&quot;&quot;,&quot;Wiliston Dev Well 1&quot;,&quot;Raw Bitumen&quot;,&quot;Liquids&quot;</stringProp>
                  <stringProp name="-149839961">&quot;Training Forecast&quot;,&quot;Wiliston Basin Development Program &quot;&quot;A&quot;&quot;&quot;,&quot;Wiliston Dev Well 2&quot;,&quot;Gas&quot;,&quot;Gas</stringProp>
                  <stringProp name="-1731574750">&quot;Training Forecast&quot;,&quot;Wiliston Basin Development Program &quot;&quot;A&quot;&quot;&quot;,&quot;Wiliston Dev Well 2&quot;,&quot;Raw Bitumen&quot;,&quot;Liquids</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Expenditure Changes" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="after" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">2013-07-25</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">after</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">127.0.0.1</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/esi.manage/changes/expenditures</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Verify That The Return Is Less Than 3 Seconds" enabled="true">
              <stringProp name="TestPlan.comments">Verify that it lasts 3 seconds</stringProp>
              <stringProp name="DurationAssertion.duration">3000</stringProp>
            </DurationAssertion>
            <hashTree/>
            <SizeAssertion guiclass="SizeAssertionGui" testclass="SizeAssertion" testname="Verify That The Return Size Is Less Than 600KB" enabled="true">
              <stringProp name="Assertion.test_field">SizeAssertion.response_network_size</stringProp>
              <stringProp name="SizeAssertion.size">600000</stringProp>
              <intProp name="SizeAssertion.operator">4</intProp>
            </SizeAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Message" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2524">OK</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Code" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="Verify XML is correctly formatted." enabled="true">
              <stringProp name="TestPlan.comments">XML Verification</stringProp>
            </XMLAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Import AFEs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot;?&gt;&#xd;
&lt;AfeImport xmlns=&quot;http://www.3esi.com/xmlns/2013/esi.manage/afe-import/&quot;&gt;&#xd;
&lt;BudgetAfe&gt;&#xd;
&lt;BudgetName&gt;Training Forecast&lt;/BudgetName&gt;&#xd;
&lt;ProjectName&gt;NS Claire 2 - Workover&lt;/ProjectName&gt;&#xd;
&lt;Header&gt;&#xd;
&lt;Name&gt;NSC0021A&lt;/Name&gt;&#xd;
&lt;Description&gt;North Sea Claire Workover&lt;/Description&gt;&#xd;
&lt;Manager&gt;Rick Boarders&lt;/Manager&gt;&#xd;
&lt;Amount&gt;310000&lt;/Amount&gt;&#xd;
&lt;WorkingInterest&gt;45&lt;/WorkingInterest&gt;&#xd;
&lt;ApprovalDate&gt;2011-01-01&lt;/ApprovalDate&gt;&#xd;
&lt;Status&gt;1-Appr&lt;/Status&gt;&#xd;
&lt;CurrencyUnit&gt;GBP&lt;/CurrencyUnit&gt;&#xd;
&lt;/Header&gt;&#xd;
&lt;ActualSpend&gt;&#xd;
&lt;Start&gt;2011-01-01&lt;/Start&gt;&#xd;
&lt;End&gt;2011-01-31&lt;/End&gt;&#xd;
&lt;Gross&gt;200000&lt;/Gross&gt;&#xd;
&lt;Net&gt;180000&lt;/Net&gt;&#xd;
&lt;CurrencyUnit&gt;GBP&lt;/CurrencyUnit&gt;&#xd;
&lt;/ActualSpend&gt;&#xd;
&lt;FieldEstimateSpend&gt;&#xd;
&lt;Start&gt;2011-01-01&lt;/Start&gt;&#xd;
&lt;End&gt;2011-01-15&lt;/End&gt;&#xd;
&lt;Gross&gt;100000&lt;/Gross&gt;&#xd;
&lt;Net&gt;90000&lt;/Net&gt;&#xd;
&lt;CurrencyUnit&gt;GBP&lt;/CurrencyUnit&gt;&#xd;
&lt;/FieldEstimateSpend&gt;&#xd;
&lt;FieldEstimateSpend&gt;&#xd;
&lt;Start&gt;2011-01-16&lt;/Start&gt;&#xd;
&lt;End&gt;2011-01-31&lt;/End&gt;&#xd;
&lt;Gross&gt;100000&lt;/Gross&gt;&#xd;
&lt;Net&gt;10000&lt;/Net&gt;&#xd;
&lt;CurrencyUnit&gt;GBP&lt;/CurrencyUnit&gt;&#xd;
&lt;/FieldEstimateSpend&gt;&#xd;
&lt;/BudgetAfe&gt;&#xd;
&lt;/AfeImport&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">127.0.0.1</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/esi.manage/integration/import/afe</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Code" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Message" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2524">OK</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <SizeAssertion guiclass="SizeAssertionGui" testclass="SizeAssertion" testname="Verify That The Return Size Is Less Than 1 KB" enabled="true">
              <stringProp name="Assertion.test_field">SizeAssertion.response_network_size</stringProp>
              <stringProp name="SizeAssertion.size">1000</stringProp>
              <intProp name="SizeAssertion.operator">4</intProp>
            </SizeAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Verify That The Return Is Less Than 2 Seconds" enabled="true">
              <stringProp name="TestPlan.comments">Verify that it lasts 2 seconds</stringProp>
              <stringProp name="DurationAssertion.duration">2000</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Element Count, Business Error Count And Fatal Error Count" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1969179931">&lt;Success&gt;true&lt;/Success&gt;
    &lt;ElementCount&gt;1&lt;/ElementCount&gt;
    &lt;BusinessErrorCount&gt;0&lt;/BusinessErrorCount&gt;
    &lt;FatalErrorCount&gt;0&lt;/FatalErrorCount&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Import Capex" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#xd;
&lt;CapexImport xmlns:t=&quot;http://www.3esi.com/xmlns/2013.1/esi.manage/types/&quot;&#xd;
 xmlns:k=&quot;http://www.3esi.com/xmlns/2014/esi.manage/keyTypes/&quot;&#xd;
 xmlns=&quot;http://www.3esi.com/xmlns/2013/esi.manage/capex-import/&quot;&#xd;
 xmlns:c=&quot;http://www.3esi.com/xmlns/2013.1/esi.manage/capitalExpenditure/&quot;&gt;&#xd;
  &lt;CreateUpdate&gt;&#xd;
    &lt;Capex&gt;&#xd;
      &lt;k:project&gt;&#xd;
        &lt;k:budget&gt;&#xd;
          &lt;k:name&gt;Training Forecast&lt;/k:name&gt;&#xd;
        &lt;/k:budget&gt;&#xd;
        &lt;k:name&gt;Wiliston Basin Land Acquisition&lt;/k:name&gt;&#xd;
      &lt;/k:project&gt;&#xd;
      &lt;c:category&gt;&#xd;
        &lt;c:abbreviation&gt;Land&lt;/c:abbreviation&gt;&#xd;
      &lt;/c:category&gt;&#xd;
      &lt;c:asset&gt;&#xd;
        &lt;k:project&gt;&#xd;
          &lt;k:budget&gt;&#xd;
            &lt;k:name&gt;Training Forecast&lt;/k:name&gt;&#xd;
          &lt;/k:budget&gt;&#xd;
          &lt;k:name&gt;Wiliston Basin Land Acquisition&lt;/k:name&gt;&#xd;
        &lt;/k:project&gt;&#xd;
        &lt;k:name&gt;Spearhead County Leasing Program&lt;/k:name&gt;&#xd;
      &lt;/c:asset&gt;&#xd;
      &lt;c:detail&gt;&#xd;
        &lt;c:type&gt;Actuals&lt;/c:type&gt;&#xd;
        &lt;c:startOn&gt;2011-01-01&lt;/c:startOn&gt;&#xd;
        &lt;c:endOn&gt;2011-01-31&lt;/c:endOn&gt;&#xd;
        &lt;c:grossAmount&gt;&#xd;
          &lt;t:value&gt;110&lt;/t:value&gt;&#xd;
          &lt;t:currency&gt;CAD&lt;/t:currency&gt;&#xd;
        &lt;/c:grossAmount&gt;&#xd;
        &lt;c:netAmount&gt;&#xd;
          &lt;t:value&gt;99&lt;/t:value&gt;&#xd;
          &lt;t:currency&gt;CAD&lt;/t:currency&gt;&#xd;
        &lt;/c:netAmount&gt;&#xd;
      &lt;/c:detail&gt;&#xd;
      &lt;c:detail&gt;&#xd;
        &lt;c:type&gt;Actuals&lt;/c:type&gt;&#xd;
        &lt;c:startOn&gt;2011-02-01&lt;/c:startOn&gt;&#xd;
        &lt;c:endOn&gt;2011-02-28&lt;/c:endOn&gt;&#xd;
        &lt;c:grossAmount&gt;&#xd;
          &lt;t:value&gt;120&lt;/t:value&gt;&#xd;
          &lt;t:currency&gt;CAD&lt;/t:currency&gt;&#xd;
        &lt;/c:grossAmount&gt;&#xd;
        &lt;c:netAmount&gt;&#xd;
          &lt;t:value&gt;108&lt;/t:value&gt;&#xd;
          &lt;t:currency&gt;CAD&lt;/t:currency&gt;&#xd;
        &lt;/c:netAmount&gt;&#xd;
      &lt;/c:detail&gt;&#xd;
      &lt;c:detail&gt;&#xd;
        &lt;c:type&gt;Actuals&lt;/c:type&gt;&#xd;
        &lt;c:startOn&gt;2011-03-01&lt;/c:startOn&gt;&#xd;
        &lt;c:endOn&gt;2011-03-31&lt;/c:endOn&gt;&#xd;
        &lt;c:grossAmount&gt;&#xd;
          &lt;t:value&gt;130&lt;/t:value&gt;&#xd;
          &lt;t:currency&gt;CAD&lt;/t:currency&gt;&#xd;
        &lt;/c:grossAmount&gt;&#xd;
        &lt;c:netAmount&gt;&#xd;
          &lt;t:value&gt;117&lt;/t:value&gt;&#xd;
          &lt;t:currency&gt;CAD&lt;/t:currency&gt;&#xd;
        &lt;/c:netAmount&gt;&#xd;
      &lt;/c:detail&gt;&#xd;
      &lt;c:detail&gt;&#xd;
        &lt;c:type&gt;Field Est&lt;/c:type&gt;&#xd;
        &lt;c:startOn&gt;2011-01-01&lt;/c:startOn&gt;&#xd;
        &lt;c:endOn&gt;2011-01-31&lt;/c:endOn&gt;&#xd;
        &lt;c:grossAmount&gt;&#xd;
          &lt;t:value&gt;210&lt;/t:value&gt;&#xd;
          &lt;t:currency&gt;CAD&lt;/t:currency&gt;&#xd;
        &lt;/c:grossAmount&gt;&#xd;
        &lt;c:netAmount&gt;&#xd;
          &lt;t:value&gt;189&lt;/t:value&gt;&#xd;
          &lt;t:currency&gt;CAD&lt;/t:currency&gt;&#xd;
        &lt;/c:netAmount&gt;&#xd;
      &lt;/c:detail&gt;&#xd;
      &lt;c:detail&gt;&#xd;
        &lt;c:type&gt;Field Est&lt;/c:type&gt;&#xd;
        &lt;c:startOn&gt;2011-02-01&lt;/c:startOn&gt;&#xd;
        &lt;c:endOn&gt;2011-02-28&lt;/c:endOn&gt;&#xd;
        &lt;c:grossAmount&gt;&#xd;
          &lt;t:value&gt;220&lt;/t:value&gt;&#xd;
          &lt;t:currency&gt;CAD&lt;/t:currency&gt;&#xd;
        &lt;/c:grossAmount&gt;&#xd;
        &lt;c:netAmount&gt;&#xd;
          &lt;t:value&gt;198&lt;/t:value&gt;&#xd;
          &lt;t:currency&gt;CAD&lt;/t:currency&gt;&#xd;
        &lt;/c:netAmount&gt;&#xd;
      &lt;/c:detail&gt;&#xd;
      &lt;c:detail&gt;&#xd;
        &lt;c:type&gt;Field Est&lt;/c:type&gt;&#xd;
        &lt;c:startOn&gt;2011-03-01&lt;/c:startOn&gt;&#xd;
        &lt;c:endOn&gt;2011-03-31&lt;/c:endOn&gt;&#xd;
        &lt;c:grossAmount&gt;&#xd;
          &lt;t:value&gt;230&lt;/t:value&gt;&#xd;
          &lt;t:currency&gt;CAD&lt;/t:currency&gt;&#xd;
        &lt;/c:grossAmount&gt;&#xd;
        &lt;c:netAmount&gt;&#xd;
          &lt;t:value&gt;207&lt;/t:value&gt;&#xd;
          &lt;t:currency&gt;CAD&lt;/t:currency&gt;&#xd;
        &lt;/c:netAmount&gt;&#xd;
      &lt;/c:detail&gt;  &#xd;
    &lt;/Capex&gt;		&#xd;
        &lt;/CreateUpdate&gt;&#xd;
		&lt;CreateUpdate&gt;&#xd;
          &lt;Capex&gt;&#xd;
            &lt;k:project&gt;&#xd;
              &lt;k:budget&gt;&#xd;
                &lt;k:name&gt;Training Forecast&lt;/k:name&gt;&#xd;
              &lt;/k:budget&gt;&#xd;
              &lt;k:name&gt;Wiliston Basin Land Acquisition&lt;/k:name&gt;&#xd;
            &lt;/k:project&gt;&#xd;
            &lt;c:category&gt;&#xd;
              &lt;c:abbreviation&gt;Land&lt;/c:abbreviation&gt;&#xd;
            &lt;/c:category&gt;&#xd;
            &lt;c:asset&gt;&#xd;
              &lt;k:project&gt;&#xd;
                &lt;k:budget&gt;&#xd;
                  &lt;k:name&gt;Training Forecast&lt;/k:name&gt;&#xd;
                &lt;/k:budget&gt;&#xd;
                &lt;k:name&gt;Wiliston Basin Land Acquisition&lt;/k:name&gt;&#xd;
              &lt;/k:project&gt;&#xd;
              &lt;k:name&gt;Spearhead County Leasing Program&lt;/k:name&gt;&#xd;
            &lt;/c:asset&gt;&#xd;
            &lt;c:detail&gt;&#xd;
              &lt;c:type&gt;Actuals&lt;/c:type&gt;&#xd;
              &lt;c:startOn&gt;2011-01-01&lt;/c:startOn&gt;&#xd;
              &lt;c:endOn&gt;2011-01-31&lt;/c:endOn&gt;&#xd;
              &lt;c:grossAmount&gt;&#xd;
                &lt;t:value&gt;110&lt;/t:value&gt;&#xd;
                &lt;t:currency&gt;CAD&lt;/t:currency&gt;&#xd;
              &lt;/c:grossAmount&gt;&#xd;
              &lt;c:netAmount&gt;&#xd;
                &lt;t:value&gt;99&lt;/t:value&gt;&#xd;
                &lt;t:currency&gt;CAD&lt;/t:currency&gt;&#xd;
              &lt;/c:netAmount&gt;&#xd;
            &lt;/c:detail&gt;&#xd;
            &lt;c:detail&gt;&#xd;
              &lt;c:type&gt;Actuals&lt;/c:type&gt;&#xd;
              &lt;c:startOn&gt;2011-02-01&lt;/c:startOn&gt;&#xd;
              &lt;c:endOn&gt;2011-02-28&lt;/c:endOn&gt;&#xd;
              &lt;c:grossAmount&gt;&#xd;
                &lt;t:value&gt;120&lt;/t:value&gt;&#xd;
                &lt;t:currency&gt;CAD&lt;/t:currency&gt;&#xd;
              &lt;/c:grossAmount&gt;			  &#xd;
              &lt;c:netAmount&gt;&#xd;
                &lt;t:value&gt;108&lt;/t:value&gt;&#xd;
                &lt;t:currency&gt;CAD&lt;/t:currency&gt;&#xd;
              &lt;/c:netAmount&gt;&#xd;
            &lt;/c:detail&gt;&#xd;
            &lt;c:detail&gt;&#xd;
              &lt;c:type&gt;Actuals&lt;/c:type&gt;&#xd;
              &lt;c:startOn&gt;2011-03-01&lt;/c:startOn&gt;&#xd;
              &lt;c:endOn&gt;2011-03-31&lt;/c:endOn&gt;&#xd;
              &lt;c:grossAmount&gt;&#xd;
                &lt;t:value&gt;130&lt;/t:value&gt;&#xd;
                &lt;t:currency&gt;CAD&lt;/t:currency&gt;&#xd;
              &lt;/c:grossAmount&gt;&#xd;
              &lt;c:netAmount&gt;&#xd;
                &lt;t:value&gt;117&lt;/t:value&gt;&#xd;
                &lt;t:currency&gt;CAD&lt;/t:currency&gt;&#xd;
              &lt;/c:netAmount&gt;			  &#xd;
            &lt;/c:detail&gt;&#xd;
            &lt;c:detail&gt;&#xd;
              &lt;c:type&gt;Field Est&lt;/c:type&gt;&#xd;
              &lt;c:startOn&gt;2011-01-01&lt;/c:startOn&gt;&#xd;
              &lt;c:endOn&gt;2011-01-31&lt;/c:endOn&gt;&#xd;
              &lt;c:grossAmount&gt;&#xd;
                &lt;t:value&gt;210&lt;/t:value&gt;&#xd;
                &lt;t:currency&gt;CAD&lt;/t:currency&gt;&#xd;
              &lt;/c:grossAmount&gt;&#xd;
              &lt;c:netAmount&gt;&#xd;
                &lt;t:value&gt;189&lt;/t:value&gt;&#xd;
                &lt;t:currency&gt;CAD&lt;/t:currency&gt;&#xd;
              &lt;/c:netAmount&gt;&#xd;
            &lt;/c:detail&gt;&#xd;
            &lt;c:detail&gt;&#xd;
              &lt;c:type&gt;Field Est&lt;/c:type&gt;&#xd;
              &lt;c:startOn&gt;2011-02-01&lt;/c:startOn&gt;&#xd;
              &lt;c:endOn&gt;2011-02-28&lt;/c:endOn&gt;&#xd;
              &lt;c:grossAmount&gt;&#xd;
                &lt;t:value&gt;220&lt;/t:value&gt;&#xd;
                &lt;t:currency&gt;CAD&lt;/t:currency&gt;&#xd;
              &lt;/c:grossAmount&gt;			  &#xd;
              &lt;c:netAmount&gt;&#xd;
                &lt;t:value&gt;198&lt;/t:value&gt;&#xd;
                &lt;t:currency&gt;CAD&lt;/t:currency&gt;&#xd;
              &lt;/c:netAmount&gt;&#xd;
            &lt;/c:detail&gt;&#xd;
            &lt;c:detail&gt;&#xd;
              &lt;c:type&gt;Field Est&lt;/c:type&gt;&#xd;
              &lt;c:startOn&gt;2011-03-01&lt;/c:startOn&gt;&#xd;
              &lt;c:endOn&gt;2011-03-31&lt;/c:endOn&gt;&#xd;
              &lt;c:grossAmount&gt;&#xd;
                &lt;t:value&gt;230&lt;/t:value&gt;&#xd;
                &lt;t:currency&gt;CAD&lt;/t:currency&gt;&#xd;
              &lt;/c:grossAmount&gt;&#xd;
              &lt;c:netAmount&gt;&#xd;
                &lt;t:value&gt;207&lt;/t:value&gt;&#xd;
                &lt;t:currency&gt;CAD&lt;/t:currency&gt;&#xd;
              &lt;/c:netAmount&gt;			  &#xd;
            &lt;/c:detail&gt;&#xd;
          &lt;/Capex&gt;&#xd;
        &lt;/CreateUpdate&gt;	  		  &#xd;
&lt;/CapexImport&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">127.0.0.1</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/esi.manage/integration/import/capex?</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Code" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Message" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2524">OK</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <SizeAssertion guiclass="SizeAssertionGui" testclass="SizeAssertion" testname="Verify That The Return Size Is Less Than 1 KB" enabled="true">
              <stringProp name="Assertion.test_field">SizeAssertion.response_network_size</stringProp>
              <stringProp name="SizeAssertion.size">1000</stringProp>
              <intProp name="SizeAssertion.operator">4</intProp>
            </SizeAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Verify That The Return Is Less Than 2 Seconds" enabled="true">
              <stringProp name="TestPlan.comments">Verify that it lasts 2 seconds</stringProp>
              <stringProp name="DurationAssertion.duration">2000</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Element Count, Business Error Count And Fatal Error Count" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1274532924">&lt;Success&gt;true&lt;/Success&gt;
    &lt;ElementCount&gt;2&lt;/ElementCount&gt;
    &lt;BusinessErrorCount&gt;0&lt;/BusinessErrorCount&gt;
    &lt;FatalErrorCount&gt;0&lt;/FatalErrorCount&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Import Opex Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/csv</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Import Opex " enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">Training Forecast,Bakken - Maintenance 2010-13,Bakken,,,UPDATE,FIXED,Actuals,All Others,,,,,,2006-01-01,2006-01-31,1,0,186272.43,USD&#xd;
Training Forecast,Bakken - Maintenance 2010-13,Bakken,,,UPDATE,FIXED,Actuals,All Others,Normal,GAS,,,,2009-01-01,2009-01-31,1,300,300,USD&#xd;
Training Forecast,Bakken - Maintenance 2010-13,Bakken,,,UPDATE,FIXED,ACTUALS,All Others,Normal,Gas,,,,2009-03-01,2009-03-31,1,400,400,USD&#xd;
Training Forecast,Bakken - Maintenance 2010-13,Bakken,,,CREATE,VARIABLE,Forecast,All Others,,oil,boe,M,,2006-01-01,2006-01-31,1,10,,USD</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">127.0.0.1</stringProp>
              <stringProp name="HTTPSampler.port">8080</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/esi.manage/integration/import/opex?withHeader=false&amp;verifyOnly=false</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Code" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Message" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2524">OK</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
              <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Verify That The Return Is Less Than 2 Seconds" enabled="true">
                <stringProp name="TestPlan.comments">Verify that it lasts 2 seconds</stringProp>
                <stringProp name="DurationAssertion.duration">2000</stringProp>
              </DurationAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Import Production" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;import xmlns:t=&quot;http://www.3esi.com/xmlns/2013.1/esi.manage/types/&quot;&#xd;
 xmlns:k=&quot;http://www.3esi.com/xmlns/2014/esi.manage/keyTypes/&quot;&#xd;
 xmlns:p=&quot;http://www.3esi.com/xmlns/2014/esi.manage/production/&quot;&#xd;
 xmlns:nf=&quot;http://www.3esi.com/xmlns/2014/esi.manage/nonForecast/&quot;&#xd;
 xmlns:pnf=&quot;http://www.3esi.com/xmlns/2014/esi.manage/production/nonForecast/&quot;&#xd;
 xmlns=&quot;http://www.3esi.com/xmlns/2014/esi.manage/production-import/&quot;&gt;&#xd;
  &lt;CreateUpdate&gt;&#xd;
    &lt;production&gt;&#xd;
      &lt;k:asset&gt;&#xd;
        &lt;k:project&gt;&#xd;
          &lt;k:budget&gt;&#xd;
            &lt;k:name&gt;Training Forecast&lt;/k:name&gt;&#xd;
          &lt;/k:budget&gt;&#xd;
          &lt;k:name&gt;Wiliston Basin Pit reclamation&lt;/k:name&gt;&#xd;
        &lt;/k:project&gt;&#xd;
        &lt;k:name&gt;Spearhead County Leasing Program&lt;/k:name&gt;&#xd;
      &lt;/k:asset&gt;&#xd;
      &lt;p:product&gt;&#xd;
        &lt;t:name&gt;Gas&lt;/t:name&gt;&#xd;
      &lt;/p:product&gt;&#xd;
      &lt;p:volumeRate&gt;mcf/d&lt;/p:volumeRate&gt;&#xd;
      &lt;p:detail&gt;&#xd;
        &lt;p:type&gt;Forecast&lt;/p:type&gt;&#xd;
        &lt;p:reserveClassification&gt;  &#xd;
           &lt;p:name&gt;Proven Developed&lt;/p:name&gt;&#xd;
           &lt;p:category&gt;Proven&lt;/p:category&gt;&#xd;
        &lt;/p:reserveClassification&gt;&#xd;
		&lt;p:startOn&gt;2011-01-01&lt;/p:startOn&gt;&#xd;
        &lt;p:endOn&gt;2011-01-31&lt;/p:endOn&gt;&#xd;
        &lt;p:grossVolume&gt;&#xd;
          &lt;t:quantity&gt;31&lt;/t:quantity&gt;&#xd;
          &lt;t:unit&gt;mcf&lt;/t:unit&gt;&#xd;
        &lt;/p:grossVolume&gt;&#xd;
      &lt;/p:detail&gt;&#xd;
      &lt;p:detail&gt;&#xd;
        &lt;p:type&gt;Forecast&lt;/p:type&gt;&#xd;
		&lt;p:reserveClassification&gt;  &#xd;
           &lt;p:name&gt;Proven Developed&lt;/p:name&gt;&#xd;
           &lt;p:category&gt;Proven&lt;/p:category&gt;&#xd;
        &lt;/p:reserveClassification&gt;&#xd;
        &lt;p:startOn&gt;2011-02-01&lt;/p:startOn&gt;&#xd;
        &lt;p:endOn&gt;2011-02-28&lt;/p:endOn&gt;&#xd;
        &lt;p:grossVolume&gt;&#xd;
          &lt;t:quantity&gt;28&lt;/t:quantity&gt;&#xd;
          &lt;t:unit&gt;mcf&lt;/t:unit&gt;&#xd;
        &lt;/p:grossVolume&gt;&#xd;
      &lt;/p:detail&gt;&#xd;
      &lt;p:detail&gt;&#xd;
        &lt;p:type&gt;Forecast&lt;/p:type&gt;&#xd;
		&lt;p:reserveClassification&gt;  &#xd;
           &lt;p:name&gt;Proven Developed&lt;/p:name&gt;&#xd;
           &lt;p:category&gt;Proven&lt;/p:category&gt;&#xd;
        &lt;/p:reserveClassification&gt;&#xd;
        &lt;p:startOn&gt;2011-03-01&lt;/p:startOn&gt;&#xd;
        &lt;p:endOn&gt;2011-03-31&lt;/p:endOn&gt;&#xd;
        &lt;p:grossVolume&gt;&#xd;
          &lt;t:quantity&gt;31&lt;/t:quantity&gt;&#xd;
          &lt;t:unit&gt;mcf&lt;/t:unit&gt;&#xd;
        &lt;/p:grossVolume&gt;&#xd;
      &lt;/p:detail&gt;&#xd;
      &lt;p:detail&gt;&#xd;
        &lt;p:type&gt;Forecast&lt;/p:type&gt;&#xd;
		&lt;p:reserveClassification&gt;  &#xd;
           &lt;p:name&gt;Proven Developed&lt;/p:name&gt;&#xd;
           &lt;p:category&gt;Proven&lt;/p:category&gt;&#xd;
        &lt;/p:reserveClassification&gt;&#xd;
        &lt;p:startOn&gt;2011-01-01&lt;/p:startOn&gt;&#xd;
        &lt;p:endOn&gt;2011-01-31&lt;/p:endOn&gt;&#xd;
        &lt;p:grossVolume&gt;&#xd;
          &lt;t:quantity&gt;31&lt;/t:quantity&gt;&#xd;
          &lt;t:unit&gt;mcf&lt;/t:unit&gt;&#xd;
        &lt;/p:grossVolume&gt;&#xd;
      &lt;/p:detail&gt;&#xd;
      &lt;p:detail&gt;&#xd;
        &lt;p:type&gt;Forecast&lt;/p:type&gt;&#xd;
		&lt;p:reserveClassification&gt;  &#xd;
           &lt;p:name&gt;Proven Developed&lt;/p:name&gt;&#xd;
           &lt;p:category&gt;Proven&lt;/p:category&gt;&#xd;
        &lt;/p:reserveClassification&gt;&#xd;
        &lt;p:startOn&gt;2011-02-01&lt;/p:startOn&gt;&#xd;
        &lt;p:endOn&gt;2011-02-28&lt;/p:endOn&gt;&#xd;
        &lt;p:grossVolume&gt;&#xd;
          &lt;t:quantity&gt;56&lt;/t:quantity&gt;&#xd;
          &lt;t:unit&gt;mcf&lt;/t:unit&gt;&#xd;
        &lt;/p:grossVolume&gt;		&#xd;
      &lt;/p:detail&gt;&#xd;
      &lt;p:detail&gt;&#xd;
        &lt;p:type&gt;Forecast&lt;/p:type&gt;&#xd;
		&lt;p:reserveClassification&gt;  &#xd;
           &lt;p:name&gt;Proven Developed&lt;/p:name&gt;&#xd;
           &lt;p:category&gt;Proven&lt;/p:category&gt;&#xd;
        &lt;/p:reserveClassification&gt;&#xd;
        &lt;p:startOn&gt;2011-03-01&lt;/p:startOn&gt;&#xd;
        &lt;p:endOn&gt;2011-03-31&lt;/p:endOn&gt;&#xd;
        &lt;p:grossVolume&gt;&#xd;
          &lt;t:quantity&gt;93&lt;/t:quantity&gt;&#xd;
          &lt;t:unit&gt;mcf&lt;/t:unit&gt;&#xd;
        &lt;/p:grossVolume&gt;&#xd;
      &lt;/p:detail&gt;&#xd;
    &lt;/production&gt;&#xd;
  &lt;/CreateUpdate&gt;&#xd;
  &lt;CreateUpdate&gt;&#xd;
    &lt;production&gt;&#xd;
      &lt;k:asset&gt;&#xd;
        &lt;k:project&gt;&#xd;
          &lt;k:budget&gt;&#xd;
            &lt;k:name&gt;Training Forecast&lt;/k:name&gt;&#xd;
          &lt;/k:budget&gt;&#xd;
          &lt;k:name&gt;Wiliston Basin Pit reclamation&lt;/k:name&gt;&#xd;
        &lt;/k:project&gt;&#xd;
        &lt;k:name&gt;Spearhead County Leasing Program&lt;/k:name&gt;&#xd;
      &lt;/k:asset&gt;&#xd;
      &lt;p:product&gt;&#xd;
        &lt;t:name&gt;Oil&lt;/t:name&gt;&#xd;
      &lt;/p:product&gt;&#xd;
      &lt;p:volumeRate&gt;bbl/d&lt;/p:volumeRate&gt;&#xd;
      &lt;p:detail&gt;&#xd;
        &lt;p:type&gt;Forecast&lt;/p:type&gt;&#xd;
		&lt;p:reserveClassification&gt;  &#xd;
           &lt;p:name&gt;Proven Developed&lt;/p:name&gt;&#xd;
           &lt;p:category&gt;Proven&lt;/p:category&gt;&#xd;
        &lt;/p:reserveClassification&gt;&#xd;
        &lt;p:startOn&gt;2011-01-01&lt;/p:startOn&gt;&#xd;
        &lt;p:endOn&gt;2011-01-31&lt;/p:endOn&gt;&#xd;
        &lt;p:grossVolume&gt;&#xd;
          &lt;t:quantity&gt;62&lt;/t:quantity&gt;&#xd;
          &lt;t:unit&gt;bbl&lt;/t:unit&gt;&#xd;
        &lt;/p:grossVolume&gt;&#xd;
      &lt;/p:detail&gt;&#xd;
      &lt;p:detail&gt;&#xd;
        &lt;p:type&gt;Forecast&lt;/p:type&gt;&#xd;
		&lt;p:reserveClassification&gt;  &#xd;
           &lt;p:name&gt;Proven Developed&lt;/p:name&gt;&#xd;
           &lt;p:category&gt;Proven&lt;/p:category&gt;&#xd;
        &lt;/p:reserveClassification&gt;&#xd;
        &lt;p:startOn&gt;2011-02-01&lt;/p:startOn&gt;&#xd;
        &lt;p:endOn&gt;2011-02-28&lt;/p:endOn&gt;&#xd;
        &lt;p:grossVolume&gt;&#xd;
          &lt;t:quantity&gt;56&lt;/t:quantity&gt;&#xd;
          &lt;t:unit&gt;bbl&lt;/t:unit&gt;&#xd;
        &lt;/p:grossVolume&gt;&#xd;
      &lt;/p:detail&gt;&#xd;
      &lt;p:detail&gt;&#xd;
        &lt;p:type&gt;Forecast&lt;/p:type&gt;&#xd;
		&lt;p:reserveClassification&gt;  &#xd;
           &lt;p:name&gt;Proven Developed&lt;/p:name&gt;&#xd;
           &lt;p:category&gt;Proven&lt;/p:category&gt;&#xd;
        &lt;/p:reserveClassification&gt;&#xd;
        &lt;p:startOn&gt;2011-03-01&lt;/p:startOn&gt;&#xd;
        &lt;p:endOn&gt;2011-03-31&lt;/p:endOn&gt;&#xd;
        &lt;p:grossVolume&gt;&#xd;
          &lt;t:quantity&gt;62&lt;/t:quantity&gt;&#xd;
          &lt;t:unit&gt;bbl&lt;/t:unit&gt;&#xd;
        &lt;/p:grossVolume&gt;&#xd;
      &lt;/p:detail&gt;&#xd;
      &lt;p:detail&gt;&#xd;
        &lt;p:type&gt;Forecast&lt;/p:type&gt;&#xd;
		&lt;p:reserveClassification&gt;  &#xd;
           &lt;p:name&gt;Proven Developed&lt;/p:name&gt;&#xd;
           &lt;p:category&gt;Proven&lt;/p:category&gt;&#xd;
        &lt;/p:reserveClassification&gt;&#xd;
        &lt;p:startOn&gt;2011-01-01&lt;/p:startOn&gt;&#xd;
        &lt;p:endOn&gt;2011-01-31&lt;/p:endOn&gt;&#xd;
        &lt;p:grossVolume&gt;&#xd;
          &lt;t:quantity&gt;93&lt;/t:quantity&gt;&#xd;
          &lt;t:unit&gt;bbl&lt;/t:unit&gt;&#xd;
        &lt;/p:grossVolume&gt;&#xd;
      &lt;/p:detail&gt;&#xd;
      &lt;p:detail&gt;&#xd;
        &lt;p:type&gt;Forecast&lt;/p:type&gt;&#xd;
		&lt;p:reserveClassification&gt;  &#xd;
           &lt;p:name&gt;Proven Developed&lt;/p:name&gt;&#xd;
           &lt;p:category&gt;Proven&lt;/p:category&gt;&#xd;
        &lt;/p:reserveClassification&gt;&#xd;
        &lt;p:startOn&gt;2011-02-01&lt;/p:startOn&gt;&#xd;
        &lt;p:endOn&gt;2011-02-28&lt;/p:endOn&gt;&#xd;
        &lt;p:grossVolume&gt;&#xd;
          &lt;t:quantity&gt;84&lt;/t:quantity&gt;&#xd;
          &lt;t:unit&gt;bbl&lt;/t:unit&gt;&#xd;
        &lt;/p:grossVolume&gt;&#xd;
      &lt;/p:detail&gt;&#xd;
      &lt;p:detail&gt;&#xd;
        &lt;p:type&gt;Forecast&lt;/p:type&gt;&#xd;
		&lt;p:reserveClassification&gt;  &#xd;
           &lt;p:name&gt;Proven Developed&lt;/p:name&gt;&#xd;
           &lt;p:category&gt;Proven&lt;/p:category&gt;&#xd;
        &lt;/p:reserveClassification&gt;&#xd;
        &lt;p:startOn&gt;2011-03-01&lt;/p:startOn&gt;&#xd;
        &lt;p:endOn&gt;2011-03-31&lt;/p:endOn&gt;&#xd;
        &lt;p:grossVolume&gt;&#xd;
          &lt;t:quantity&gt;93&lt;/t:quantity&gt;&#xd;
          &lt;t:unit&gt;bbl&lt;/t:unit&gt;&#xd;
        &lt;/p:grossVolume&gt;&#xd;
      &lt;/p:detail&gt;&#xd;
    &lt;/production&gt;&#xd;
  &lt;/CreateUpdate&gt;&#xd;
&lt;/import&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">127.0.0.1</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/esi.manage/integration/import/production?</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Code" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Message" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2524">OK</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Verify That The Return Is Less Than 2 Seconds" enabled="true">
              <stringProp name="TestPlan.comments">Verify that it lasts 2 seconds</stringProp>
              <stringProp name="DurationAssertion.duration">2000</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Element Count, Business Error Count And Fatal Error Count" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1274532924">&lt;Success&gt;true&lt;/Success&gt;
    &lt;ElementCount&gt;2&lt;/ElementCount&gt;
    &lt;BusinessErrorCount&gt;0&lt;/BusinessErrorCount&gt;
    &lt;FatalErrorCount&gt;0&lt;/FatalErrorCount&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Configurations WS Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Import_Hierarchy" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;HierarchyImport xmlns:t=&quot;http://www.3esi.com/xmlns/2013.1/esi.manage/types/&quot;&#xd;
 xmlns:h=&quot;http://www.3esi.com/xmlns/2013.1/esi.manage/hierarchy/&quot;&#xd;
 xmlns=&quot;http://www.3esi.com/xmlns/2013.1/esi.manage/hierarchy-import/&quot;&gt;&#xd;
&lt;Create&gt;&#xd;
&lt;HierarchyNodes&gt;&#xd;
&lt;h:AttributeInstances&gt;&#xd;
&lt;h:AttributeDescription&gt;Field Area&lt;/h:AttributeDescription&gt;&#xd;
&lt;h:Description&gt;Parkland South West&lt;/h:Description&gt;&#xd;
&lt;h:Abbreviation&gt;pkl_wb&lt;/h:Abbreviation&gt;&#xd;
&lt;h:ParentAbbreviation&gt;PKLND&lt;/h:ParentAbbreviation&gt;&#xd;
&lt;/h:AttributeInstances&gt;&#xd;
&lt;h:AttributeInstances&gt;&#xd;
&lt;h:AttributeDescription&gt;Field Area&lt;/h:AttributeDescription&gt;&#xd;
&lt;h:Description&gt;Parkland West&lt;/h:Description&gt;&#xd;
&lt;h:Abbreviation&gt;pkl_w&lt;/h:Abbreviation&gt;&#xd;
&lt;h:ParentAbbreviation&gt;PKLND&lt;/h:ParentAbbreviation&gt;&#xd;
&lt;/h:AttributeInstances&gt;&#xd;
&lt;h:AttributeInstances&gt;&#xd;
&lt;h:AttributeDescription&gt;Field Area&lt;/h:AttributeDescription&gt;&#xd;
&lt;h:Description&gt;Parkland East&lt;/h:Description&gt;&#xd;
&lt;h:Abbreviation&gt;pkl_e&lt;/h:Abbreviation&gt;&#xd;
&lt;h:ParentAbbreviation&gt;PKLND&lt;/h:ParentAbbreviation&gt;&#xd;
&lt;/h:AttributeInstances&gt;&#xd;
&lt;h:AttributeInstances&gt;&#xd;
&lt;h:AttributeDescription&gt;Field Area&lt;/h:AttributeDescription&gt;&#xd;
&lt;h:Description&gt;Parkland South&lt;/h:Description&gt;&#xd;
&lt;h:Abbreviation&gt;pkl_s&lt;/h:Abbreviation&gt;&#xd;
&lt;h:ParentAbbreviation&gt;PKLND&lt;/h:ParentAbbreviation&gt;&#xd;
&lt;/h:AttributeInstances&gt;&#xd;
&lt;h:AttributeInstances&gt;&#xd;
&lt;h:AttributeDescription&gt;Field Area&lt;/h:AttributeDescription&gt;&#xd;
&lt;h:Description&gt;Parkland North&lt;/h:Description&gt;&#xd;
&lt;h:Abbreviation&gt;pkl_n&lt;/h:Abbreviation&gt;&#xd;
&lt;h:ParentAbbreviation&gt;PKLND&lt;/h:ParentAbbreviation&gt;&#xd;
&lt;/h:AttributeInstances&gt;&#xd;
&lt;/HierarchyNodes&gt;&#xd;
&lt;/Create&gt;&#xd;
&lt;/HierarchyImport&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">127.0.0.1</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/esi.manage/integration/import/hierarchy</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Code" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Message" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2524">OK</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Verify That The Return Is Less Than 2 Seconds" enabled="true">
              <stringProp name="TestPlan.comments">Verify that it lasts 2 seconds</stringProp>
              <stringProp name="DurationAssertion.duration">2000</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify_Response_Data" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1952113434">&lt;ImportResult xmlns=&quot;http://www.3esi.com/xmlns/2013/esi.manage/import-result/&quot;&gt;
  &lt;Summary&gt;
    &lt;Success&gt;true&lt;/Success&gt;
    &lt;ElementCount&gt;1&lt;/ElementCount&gt;
    &lt;BusinessErrorCount&gt;0&lt;/BusinessErrorCount&gt;
    &lt;FatalErrorCount&gt;0&lt;/FatalErrorCount&gt;
  &lt;/Summary&gt;
&lt;/ImportResult&gt;</stringProp>
                <stringProp name="0"></stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Import_External_Identifiers" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;ExternalIdentifierImport xmlns=&quot;http://www.3esi.com/xmlns/2013/esi.manage/externalIdentifier-import/&quot;&#xd;
 xmlns:e=&quot;http://www.3esi.com/xmlns/2013/esi.manage/externalIdentifier/&quot;&#xd;
 xmlns:t=&quot;http://www.3esi.com/xmlns/2013.1/esi.manage/types/&quot;&#xd;
 xmlns:k=&quot;http://www.3esi.com/xmlns/2014/esi.manage/keyTypes/&quot;&gt;&#xd;
&lt;CreateUpdate&gt;&#xd;
&lt;ExternalIdentifier&gt;&#xd;
&lt;k:system&gt;Web_Service_1&lt;/k:system&gt;&#xd;
&lt;k:identifier&gt;Web_Service_Identifier_1&lt;/k:identifier&gt;&#xd;
&lt;e:context&gt;&#xd;
&lt;e:item&gt;&#xd;
&lt;e:name&gt;Asset&lt;/e:name&gt;&#xd;
&lt;e:value&gt;PRA EM 23 - Well 2&lt;/e:value&gt;&#xd;
&lt;/e:item&gt;&#xd;
&lt;e:item&gt;&#xd;
&lt;e:name&gt;Project&lt;/e:name&gt;&#xd;
&lt;e:value&gt;Peace River Arch - EM Exploration 2010&lt;/e:value&gt;&#xd;
&lt;/e:item&gt;&#xd;
&lt;/e:context&gt;&#xd;
&lt;/ExternalIdentifier&gt;&#xd;
&lt;/CreateUpdate&gt;&#xd;
&lt;CreateUpdate&gt;&#xd;
&lt;ExternalIdentifier&gt;&#xd;
&lt;k:system&gt;Web_Service_2&lt;/k:system&gt;&#xd;
&lt;k:identifier&gt;Web_Service_Identifier_2&lt;/k:identifier&gt;&#xd;
&lt;e:context&gt;&#xd;
&lt;e:item&gt;&#xd;
&lt;e:name&gt;Asset&lt;/e:name&gt;&#xd;
&lt;e:value&gt;PRA EM 23 - Well 2&lt;/e:value&gt;&#xd;
&lt;/e:item&gt;&#xd;
&lt;e:item&gt;&#xd;
&lt;e:name&gt;Project&lt;/e:name&gt;&#xd;
&lt;e:value&gt;Peace River Arch - EM Exploration 2010&lt;/e:value&gt;&#xd;
&lt;/e:item&gt;&#xd;
&lt;/e:context&gt;&#xd;
&lt;/ExternalIdentifier&gt;&#xd;
&lt;/CreateUpdate&gt;&#xd;
&lt;Update&gt;&#xd;
&lt;ExternalIdentifier&gt;&#xd;
&lt;k:system&gt;Excalibur&lt;/k:system&gt;&#xd;
&lt;k:identifier&gt;Web_Service_Update_Identifier&lt;/k:identifier&gt;&#xd;
&lt;e:context&gt;&#xd;
&lt;e:item&gt;&#xd;
&lt;e:name&gt;Asset&lt;/e:name&gt;&#xd;
&lt;e:value&gt;TestAsset&lt;/e:value&gt;&#xd;
&lt;/e:item&gt;&#xd;
&lt;e:item&gt;&#xd;
&lt;e:name&gt;Project&lt;/e:name&gt;&#xd;
&lt;e:value&gt;TestProject&lt;/e:value&gt;&#xd;
&lt;/e:item&gt;&#xd;
&lt;/e:context&gt;&#xd;
&lt;/ExternalIdentifier&gt;&#xd;
&lt;/Update&gt;&#xd;
&lt;/ExternalIdentifierImport&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">127.0.0.1</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/esi.manage/integration/import/externalidentifier</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Code" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Message" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2524">OK</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Verify That The Return Is Less Than 2 Seconds" enabled="true">
              <stringProp name="TestPlan.comments">Verify that it lasts 2 seconds</stringProp>
              <stringProp name="DurationAssertion.duration">2000</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Element Count Business Error Count Fatal Error Count" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-579885917">&lt;Success&gt;true&lt;/Success&gt;
    &lt;ElementCount&gt;3&lt;/ElementCount&gt;
    &lt;BusinessErrorCount&gt;0&lt;/BusinessErrorCount&gt;
    &lt;FatalErrorCount&gt;0&lt;/FatalErrorCount&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Capital Planning WS Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Export" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="path" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">capital planning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">path</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">127.0.0.1</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/esi.manage/integration/capitalplanning/export</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Code" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Message" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2524">OK</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Verify That The Return Is Less Than 2 Seconds" enabled="true">
              <stringProp name="TestPlan.comments">Verify that it lasts 2 seconds</stringProp>
              <stringProp name="DurationAssertion.duration">2000</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Data" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-573979098">Capital Planning 1</stringProp>
                <stringProp name="-573979097">Capital Planning 2</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Attribute Import" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#xd;
&lt;import&#xd;
  xmlns=&quot;http://www.3esi.com/xmlns/2011.1/esi.manage/projectAttribute-import/&quot;&#xd;
  xmlns:k=&quot;http://www.3esi.com/xmlns/2011.1/esi.manage/keyTypes/&quot;&#xd;
  xmlns:atb=&quot;http://www.3esi.com/xmlns/2011.1/esi.manage/attribute/&quot;&#xd;
  &gt;&#xd;
  &lt;project&gt;&#xd;
    &lt;k:budget&gt;&#xd;
      &lt;k:name&gt;Training Forecast&lt;/k:name&gt;&#xd;
    &lt;/k:budget&gt;&#xd;
    &lt;k:name&gt;Capital Planning 1&lt;/k:name&gt;&#xd;
    &lt;attribute&gt;&#xd;
      &lt;atb:description&gt;Out&lt;/atb:description&gt;&#xd;
      &lt;atb:parentInstance&gt;&#xd;
        &lt;k:parent&gt;&#xd;
          &lt;k:description&gt;In_Out&lt;/k:description&gt;&#xd;
        &lt;/k:parent&gt;&#xd;
      &lt;/atb:parentInstance&gt;&#xd;
    &lt;/attribute&gt;&#xd;
    &lt;attribute&gt;&#xd;
      &lt;atb:description&gt;T1&lt;/atb:description&gt;&#xd;
      &lt;atb:parentInstance&gt;&#xd;
        &lt;k:parent&gt;&#xd;
          &lt;k:description&gt;Tranche&lt;/k:description&gt;&#xd;
        &lt;/k:parent&gt;&#xd;
      &lt;/atb:parentInstance&gt;&#xd;
    &lt;/attribute&gt;&#xd;
  &lt;/project&gt;&#xd;
  &#xd;
  &lt;project&gt;&#xd;
    &lt;k:budget&gt;&#xd;
      &lt;k:name&gt;Training Forecast&lt;/k:name&gt;&#xd;
    &lt;/k:budget&gt;&#xd;
    &lt;k:name&gt;Capital Planning 2&lt;/k:name&gt;&#xd;
    &lt;attribute&gt;&#xd;
      &lt;atb:description&gt;In&lt;/atb:description&gt;&#xd;
      &lt;atb:parentInstance&gt;&#xd;
        &lt;k:parent&gt;&#xd;
          &lt;k:description&gt;In_Out&lt;/k:description&gt;&#xd;
        &lt;/k:parent&gt;&#xd;
      &lt;/atb:parentInstance&gt;&#xd;
    &lt;/attribute&gt;&#xd;
    &lt;attribute&gt;&#xd;
      &lt;atb:description&gt;T2&lt;/atb:description&gt;&#xd;
      &lt;atb:parentInstance&gt;&#xd;
        &lt;k:parent&gt;&#xd;
          &lt;k:description&gt;Tranche&lt;/k:description&gt;&#xd;
        &lt;/k:parent&gt;&#xd;
      &lt;/atb:parentInstance&gt;&#xd;
    &lt;/attribute&gt;&#xd;
  &lt;/project&gt;&#xd;
&lt;/import&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">127.0.0.1</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/esi.manage/integration/capitalplanning/import/attributes</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Code" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Message" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2524">OK</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Verify That The Return Is Less Than 2 Seconds" enabled="true">
              <stringProp name="TestPlan.comments">Verify that it lasts 2 seconds</stringProp>
              <stringProp name="DurationAssertion.duration">2000</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Project Shift " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;ProjectShift   xmlns=&quot;http://www.3esi.com/xmlns/2011.1/esi.manage/project-shift/&quot;&#xd;
  xmlns:k=&quot;http://www.3esi.com/xmlns/2011.1/esi.manage/keyTypes/&quot;&#xd;
&gt;&#xd;
  &lt;Shift&gt;&#xd;
    &lt;Project&gt;&#xd;
      &lt;k:budget&gt;&#xd;
        &lt;k:name&gt;Training Forecast&lt;/k:name&gt;&#xd;
      &lt;/k:budget&gt;&#xd;
      &lt;k:name&gt;Capital Planning 1&lt;/k:name&gt;&#xd;
    &lt;/Project&gt;&#xd;
    &lt;!-- new project start date --&gt;&#xd;
    &lt;startDate&gt;2014-06-01&lt;/startDate&gt;&#xd;
  &lt;/Shift&gt;&#xd;
  &lt;Shift&gt;&#xd;
    &lt;Project&gt;&#xd;
      &lt;k:budget&gt;&#xd;
        &lt;k:name&gt;Training Forecast&lt;/k:name&gt;&#xd;
      &lt;/k:budget&gt;&#xd;
      &lt;k:name&gt;Capital Planning 2&lt;/k:name&gt;&#xd;
    &lt;/Project&gt;&#xd;
    &lt;ShiftBy&gt;&#xd;
      &lt;years&gt;1&lt;/years&gt;&#xd;
    &lt;/ShiftBy&gt;&#xd;
  &lt;/Shift&gt;&#xd;
  &lt;Shift&gt;&#xd;
    &lt;Project&gt;&#xd;
      &lt;k:budget&gt;&#xd;
        &lt;k:name&gt;Training Forecast&lt;/k:name&gt;&#xd;
      &lt;/k:budget&gt;&#xd;
      &lt;k:name&gt;Capital Planning 1&lt;/k:name&gt;&#xd;
    &lt;/Project&gt;&#xd;
    &lt;!-- new project start date --&gt;&#xd;
      &lt;ShiftBy&gt;&#xd;
      &lt;years&gt;-2&lt;/years&gt;&#xd;
      &lt;months&gt;-6&lt;/months&gt;&#xd;
    &lt;/ShiftBy&gt;&#xd;
  &lt;/Shift&gt;&#xd;
&#xd;
&lt;/ProjectShift&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">127.0.0.1</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/esi.manage/integration/capitalplanning/projectshift</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Code" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Response Message" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2524">OK</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Verify That The Return Is Less Than 2 Seconds" enabled="true">
              <stringProp name="TestPlan.comments">Verify that it lasts 2 seconds</stringProp>
              <stringProp name="DurationAssertion.duration">2000</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Element_Count,_Business_Error_Count_Fatal_Error" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-579885917">&lt;Success&gt;true&lt;/Success&gt;
    &lt;ElementCount&gt;3&lt;/ElementCount&gt;
    &lt;BusinessErrorCount&gt;0&lt;/BusinessErrorCount&gt;
    &lt;FatalErrorCount&gt;0&lt;/FatalErrorCount&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename">C:\JMeter\JMeter_WS.log</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename">C:\JMeter\Results_Table.csv</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
            </value>
          </objProp>
          <stringProp name="filename">C:\JMeter\Assertion_Results.log</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
